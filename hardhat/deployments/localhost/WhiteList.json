{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_apiKey",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "DelistToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "ListToken",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "get",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_apiKey",
          "type": "address"
        }
      ],
      "name": "getListings",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            }
          ],
          "internalType": "struct WhiteList.Token[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "listToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "removeToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whiteList",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x6a365a209f41674c7ba907e6b0218bcf03b6e84c9516af6da80decbbee283900",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "752863",
    "logsBloom": "0x
    "blockHash": "0x6a931198d94f3bf9ad8ca6ceb696071ef94d0341d6b14ab67c9cc79e35a8477d",
    "transactionHash": "0x6a365a209f41674c7ba907e6b0218bcf03b6e84c9516af6da80decbbee283900",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "752863",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"
  ],
  "numDeployments": 1,
  "solcInputHash": "fc1864900b674eb9ce2a63ded3ae3aa0",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_apiKey\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"DelistToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"ListToken\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"get\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_apiKey\",\"type\":\"address\"}],\"name\":\"getListings\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"internalType\":\"struct WhiteList.Token[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"listToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"removeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whiteList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getListings(address)\":{\"details\":\"Function to get all whitelisted tokens.\",\"returns\":{\"_0\":\"Array of token objects\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/WhiteList.sol\":\"WhiteList\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/WhiteList.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n// import \\\"hardhat/console.sol\\\";\\n\\ncontract WhiteList {\\n\\tbytes32 private apiKey;\\n\\taddress payable private owner;\\n\\tmapping(address => bool) public whiteList;\\n\\n\\tconstructor(address _apiKey) {\\n\\t\\tapiKey = keccak256(abi.encodePacked(_apiKey));\\n\\t\\towner = payable(msg.sender);\\n\\t}\\n\\n\\tmodifier onlyOwner() {\\n\\t\\trequire(msg.sender == owner, \\\"You're not the owner!\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\tevent ListToken(address _address, uint256 time);\\n\\tevent DelistToken(address _address, uint256 time);\\n\\n\\tstruct Token {\\n\\t\\tstring name;\\n\\t\\tstring symbol;\\n\\t\\taddress tokenAddress;\\n\\t}\\n\\n\\tToken[] private tokenList;\\n\\n\\tfunction get(address _addr) public view returns (bool) {\\n\\t\\t// Check if token address is listed on platform\\n\\t\\treturn whiteList[_addr];\\n\\t}\\n\\n\\tfunction listToken(\\n\\t\\tstring calldata name,\\n\\t\\tstring calldata symbol,\\n\\t\\taddress _addr\\n\\t) external onlyOwner {\\n\\t\\t// Add token address to listed tokens\\n\\t\\trequire(whiteList[_addr] != true, \\\"Token Exists!\\\");\\n\\t\\twhiteList[_addr] = true;\\n\\t\\ttokenList.push(Token(name, symbol, _addr));\\n\\t\\temit ListToken(_addr, block.timestamp);\\n\\t}\\n\\n\\tfunction removeToken(address _addr) external onlyOwner {\\n\\t\\t// Remove token listing.\\n\\t\\trequire(whiteList[_addr] == true, \\\"Token not listed!\\\");\\n\\t\\tdelete whiteList[_addr];\\n\\n\\t\\tfor (uint256 i = 0; i < tokenList.length; i++) {\\n\\t\\t\\tif (tokenList[i].tokenAddress == _addr) {\\n\\t\\t\\t\\ttokenList[i] = tokenList[tokenList.length - 1];\\n\\t\\t\\t\\ttokenList.pop();\\n\\t\\t\\t\\temit DelistToken(_addr, block.timestamp);\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t/** @dev Function to get all whitelisted tokens.\\n\\t * @return Array of token objects\\n\\t */\\n\\tfunction getListings(address _apiKey)\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (Token[] memory)\\n\\t{\\n\\t\\trequire(\\n\\t\\t\\tapiKey == keccak256(abi.encodePacked(_apiKey)),\\n\\t\\t\\t\\\"Access denied!\\\"\\n\\t\\t);\\n\\n\\t\\treturn tokenList;\\n\\t}\\n}\\n\",\"keccak256\":\"0xc56b6f0b7d555992cdc0270da730c4f2d8a465403e9aa940bd05520094dff326\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610c86380380610c8683398101604081905261002f9161007c565b6040516001600160601b0319606083901b16602082015260340160408051601f19818403018152919052805160209091012060005550600180546001600160a01b031916331790556100aa565b60006020828403121561008d578081fd5b81516001600160a01b03811681146100a3578182fd5b9392505050565b610bcd806100b96000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631709b8251461005c578063372c12b1146100715780635fa7b584146100a9578063c2bc2efc146100bc578063cde8cd6e146100e8575b600080fd5b61006f61006a3660046109b2565b610108565b005b61009461007f366004610991565b60026020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b61006f6100b7366004610991565b610315565b6100946100ca366004610991565b6001600160a01b031660009081526002602052604090205460ff1690565b6100fb6100f6366004610991565b6105cd565b6040516100a09190610a7b565b6001546001600160a01b0316331461015f5760405162461bcd60e51b8152602060048201526015602482015274596f75277265206e6f7420746865206f776e65722160581b60448201526064015b60405180910390fd5b6001600160a01b03811660009081526002602052604090205460ff161515600114156101bd5760405162461bcd60e51b815260206004820152600d60248201526c546f6b656e204578697374732160981b6044820152606401610156565b6001600160a01b038116600090815260026020908152604091829020805460ff1916600117905581516080601f88018390049092028101820190925260608201868152600392918291908990899081908501838280828437600092019190915250505090825250604080516020601f88018190048102820181019092528681529181019190879087908190840183828082843760009201829052509385525050506001600160a01b03851660209283015283546001810185559381528190208251805193946003029091019261029692849201906107dd565b5060208281015180516102af92600185019201906107dd565b5060409182015160029190910180546001600160a01b0319166001600160a01b03928316179055815190831681524260208201527f88e70a3a2c6cbeb128c95d6dd08991b9ec0531fc455fbfc03ef6475ad898c7e7910160405180910390a15050505050565b6001546001600160a01b031633146103675760405162461bcd60e51b8152602060048201526015602482015274596f75277265206e6f7420746865206f776e65722160581b6044820152606401610156565b6001600160a01b03811660009081526002602052604090205460ff1615156001146103c85760405162461bcd60e51b8152602060048201526011602482015270546f6b656e206e6f74206c69737465642160781b6044820152606401610156565b6001600160a01b0381166000908152600260205260408120805460ff191690555b6003548110156105c957816001600160a01b03166003828154811061041e57634e487b7160e01b600052603260045260246000fd5b60009182526020909120600260039092020101546001600160a01b031614156105b7576003805461045190600190610b14565b8154811061046f57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600302016003828154811061049e57634e487b7160e01b600052603260045260246000fd5b906000526020600020906003020160008201816000019080546104c090610b2b565b6104cb929190610861565b5060018201816001019080546104e090610b2b565b6104eb929190610861565b50600291820154910180546001600160a01b0319166001600160a01b03909216919091179055600380548061053057634e487b7160e01b600052603160045260246000fd5b6000828152602081206000199092019160038302019061055082826108dc565b61055e6001830160006108dc565b5060020180546001600160a01b03191690559055604080516001600160a01b03841681524260208201527f23729033fa9d9802cea7b9fa7b1372014ddca030ab25cc785b71a17ab65f7151910160405180910390a15050565b806105c181610b66565b9150506103e9565b5050565b604051606082811b6bffffffffffffffffffffffff191660208301529060340160405160208183030381529060405280519060200120600054146106445760405162461bcd60e51b815260206004820152600e60248201526d4163636573732064656e6965642160901b6044820152606401610156565b6003805480602002602001604051908101604052809291908181526020016000905b828210156107d2578382906000526020600020906003020160405180606001604052908160008201805461069990610b2b565b80601f01602080910402602001604051908101604052809291908181526020018280546106c590610b2b565b80156107125780601f106106e757610100808354040283529160200191610712565b820191906000526020600020905b8154815290600101906020018083116106f557829003601f168201915b5050505050815260200160018201805461072b90610b2b565b80601f016020809104026020016040519081016040528092919081815260200182805461075790610b2b565b80156107a45780601f10610779576101008083540402835291602001916107a4565b820191906000526020600020905b81548152906001019060200180831161078757829003601f168201915b5050509183525050600291909101546001600160a01b03166020918201529082526001929092019101610666565b505050509050919050565b8280546107e990610b2b565b90600052602060002090601f01602090048101928261080b5760008555610851565b82601f1061082457805160ff1916838001178555610851565b82800160010185558215610851579182015b82811115610851578251825591602001919060010190610836565b5061085d929150610919565b5090565b82805461086d90610b2b565b90600052602060002090601f01602090048101928261088f5760008555610851565b82601f106108a05780548555610851565b8280016001018555821561085157600052602060002091601f016020900482015b828111156108515782548255916001019190600101906108c1565b5080546108e890610b2b565b6000825580601f106108f8575050565b601f0160209004906000526020600020908101906109169190610919565b50565b5b8082111561085d576000815560010161091a565b80356001600160a01b038116811461094557600080fd5b919050565b60008083601f84011261095b578182fd5b50813567ffffffffffffffff811115610972578182fd5b60208301915083602082850101111561098a57600080fd5b9250929050565b6000602082840312156109a2578081fd5b6109ab8261092e565b9392505050565b6000806000806000606086880312156109c9578081fd5b853567ffffffffffffffff808211156109e0578283fd5b6109ec89838a0161094a565b90975095506020880135915080821115610a04578283fd5b50610a118882890161094a565b9094509250610a2490506040870161092e565b90509295509295909350565b60008151808452815b81811015610a5557602081850181015186830182015201610a39565b81811115610a665782602083870101525b50601f01601f19169290920160200192915050565b60006020808301818452808551808352604092508286019150828160051b870101848801865b83811015610b0657603f19898403018552815160608151818652610ac782870182610a30565b915050888201518582038a870152610adf8282610a30565b928901516001600160a01b0316958901959095525094870194925090860190600101610aa1565b509098975050505050505050565b600082821015610b2657610b26610b81565b500390565b600181811c90821680610b3f57607f821691505b60208210811415610b6057634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415610b7a57610b7a610b81565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220ed26c5b9f4946594677f8f6bbaeec21e677d46f7516d5221c712ff2a6dd96a0264736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c80631709b8251461005c578063372c12b1146100715780635fa7b584146100a9578063c2bc2efc146100bc578063cde8cd6e146100e8575b600080fd5b61006f61006a3660046109b2565b610108565b005b61009461007f366004610991565b60026020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b61006f6100b7366004610991565b610315565b6100946100ca366004610991565b6001600160a01b031660009081526002602052604090205460ff1690565b6100fb6100f6366004610991565b6105cd565b6040516100a09190610a7b565b6001546001600160a01b0316331461015f5760405162461bcd60e51b8152602060048201526015602482015274596f75277265206e6f7420746865206f776e65722160581b60448201526064015b60405180910390fd5b6001600160a01b03811660009081526002602052604090205460ff161515600114156101bd5760405162461bcd60e51b815260206004820152600d60248201526c546f6b656e204578697374732160981b6044820152606401610156565b6001600160a01b038116600090815260026020908152604091829020805460ff1916600117905581516080601f88018390049092028101820190925260608201868152600392918291908990899081908501838280828437600092019190915250505090825250604080516020601f88018190048102820181019092528681529181019190879087908190840183828082843760009201829052509385525050506001600160a01b03851660209283015283546001810185559381528190208251805193946003029091019261029692849201906107dd565b5060208281015180516102af92600185019201906107dd565b5060409182015160029190910180546001600160a01b0319166001600160a01b03928316179055815190831681524260208201527f88e70a3a2c6cbeb128c95d6dd08991b9ec0531fc455fbfc03ef6475ad898c7e7910160405180910390a15050505050565b6001546001600160a01b031633146103675760405162461bcd60e51b8152602060048201526015602482015274596f75277265206e6f7420746865206f776e65722160581b6044820152606401610156565b6001600160a01b03811660009081526002602052604090205460ff1615156001146103c85760405162461bcd60e51b8152602060048201526011602482015270546f6b656e206e6f74206c69737465642160781b6044820152606401610156565b6001600160a01b0381166000908152600260205260408120805460ff191690555b6003548110156105c957816001600160a01b03166003828154811061041e57634e487b7160e01b600052603260045260246000fd5b60009182526020909120600260039092020101546001600160a01b031614156105b7576003805461045190600190610b14565b8154811061046f57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600302016003828154811061049e57634e487b7160e01b600052603260045260246000fd5b906000526020600020906003020160008201816000019080546104c090610b2b565b6104cb929190610861565b5060018201816001019080546104e090610b2b565b6104eb929190610861565b50600291820154910180546001600160a01b0319166001600160a01b03909216919091179055600380548061053057634e487b7160e01b600052603160045260246000fd5b6000828152602081206000199092019160038302019061055082826108dc565b61055e6001830160006108dc565b5060020180546001600160a01b03191690559055604080516001600160a01b03841681524260208201527f23729033fa9d9802cea7b9fa7b1372014ddca030ab25cc785b71a17ab65f7151910160405180910390a15050565b806105c181610b66565b9150506103e9565b5050565b604051606082811b6bffffffffffffffffffffffff191660208301529060340160405160208183030381529060405280519060200120600054146106445760405162461bcd60e51b815260206004820152600e60248201526d4163636573732064656e6965642160901b6044820152606401610156565b6003805480602002602001604051908101604052809291908181526020016000905b828210156107d2578382906000526020600020906003020160405180606001604052908160008201805461069990610b2b565b80601f01602080910402602001604051908101604052809291908181526020018280546106c590610b2b565b80156107125780601f106106e757610100808354040283529160200191610712565b820191906000526020600020905b8154815290600101906020018083116106f557829003601f168201915b5050505050815260200160018201805461072b90610b2b565b80601f016020809104026020016040519081016040528092919081815260200182805461075790610b2b565b80156107a45780601f10610779576101008083540402835291602001916107a4565b820191906000526020600020905b81548152906001019060200180831161078757829003601f168201915b5050509183525050600291909101546001600160a01b03166020918201529082526001929092019101610666565b505050509050919050565b8280546107e990610b2b565b90600052602060002090601f01602090048101928261080b5760008555610851565b82601f1061082457805160ff1916838001178555610851565b82800160010185558215610851579182015b82811115610851578251825591602001919060010190610836565b5061085d929150610919565b5090565b82805461086d90610b2b565b90600052602060002090601f01602090048101928261088f5760008555610851565b82601f106108a05780548555610851565b8280016001018555821561085157600052602060002091601f016020900482015b828111156108515782548255916001019190600101906108c1565b5080546108e890610b2b565b6000825580601f106108f8575050565b601f0160209004906000526020600020908101906109169190610919565b50565b5b8082111561085d576000815560010161091a565b80356001600160a01b038116811461094557600080fd5b919050565b60008083601f84011261095b578182fd5b50813567ffffffffffffffff811115610972578182fd5b60208301915083602082850101111561098a57600080fd5b9250929050565b6000602082840312156109a2578081fd5b6109ab8261092e565b9392505050565b6000806000806000606086880312156109c9578081fd5b853567ffffffffffffffff808211156109e0578283fd5b6109ec89838a0161094a565b90975095506020880135915080821115610a04578283fd5b50610a118882890161094a565b9094509250610a2490506040870161092e565b90509295509295909350565b60008151808452815b81811015610a5557602081850181015186830182015201610a39565b81811115610a665782602083870101525b50601f01601f19169290920160200192915050565b60006020808301818452808551808352604092508286019150828160051b870101848801865b83811015610b0657603f19898403018552815160608151818652610ac782870182610a30565b915050888201518582038a870152610adf8282610a30565b928901516001600160a01b0316958901959095525094870194925090860190600101610aa1565b509098975050505050505050565b600082821015610b2657610b26610b81565b500390565b600181811c90821680610b3f57607f821691505b60208210811415610b6057634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415610b7a57610b7a610b81565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220ed26c5b9f4946594677f8f6bbaeec21e677d46f7516d5221c712ff2a6dd96a0264736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getListings(address)": {
        "details": "Function to get all whitelisted tokens.",
        "returns": {
          "_0": "Array of token objects"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3,
        "contract": "contracts/WhiteList.sol:WhiteList",
        "label": "apiKey",
        "offset": 0,
        "slot": "0",
        "type": "t_bytes32"
      },
      {
        "astId": 5,
        "contract": "contracts/WhiteList.sol:WhiteList",
        "label": "owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address_payable"
      },
      {
        "astId": 9,
        "contract": "contracts/WhiteList.sol:WhiteList",
        "label": "whiteList",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 67,
        "contract": "contracts/WhiteList.sol:WhiteList",
        "label": "tokenList",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_struct(Token)63_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Token)63_storage)dyn_storage": {
        "base": "t_struct(Token)63_storage",
        "encoding": "dynamic_array",
        "label": "struct WhiteList.Token[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Token)63_storage": {
        "encoding": "inplace",
        "label": "struct WhiteList.Token",
        "members": [
          {
            "astId": 58,
            "contract": "contracts/WhiteList.sol:WhiteList",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 60,
            "contract": "contracts/WhiteList.sol:WhiteList",
            "label": "symbol",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 62,
            "contract": "contracts/WhiteList.sol:WhiteList",
            "label": "tokenAddress",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "96"
      }
    }
  }
}